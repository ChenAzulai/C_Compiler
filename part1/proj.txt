
func fee(l,m,n:int) return bool    
{
	{
		{
			var t: int;
			func foo() return int {while (7!=9){var a,b : string; return;} return x;}
			{}
			while (true) x=x+ 1;
		}
	}
	return true;
}
func goo()return int {x=9; return;}
proc fee(a,b:int){
	func fee(l,m,n:int) return bool
		{ 
		return true;
		}
}
proc Main()
{
	if (true) {x=5;} else {x=x+ 1;}
	x=3+ 2;
	func foo_3() return int { if (true) {x=1;} return 0;}
}
/%func fee(l,m,n:int) return bool    
{
	{
		{
			var t: int;
			func foo() return int {while (7!=9){var a,b : string; return;} return x;}
			{}
		}
	}
	return true;
}
proc fee(a,b:int){
	func fee(l,m,n:int) return bool
		{ 
		return true;
		}
}
func foo() return int {while (7!=9){var a,b : string; return;} return x;}
func goo()return int {x=9;}
func too()return int {if (5>8) x= 3;}
var x,y,z: char*;
var t: int;
var a,b : string;%/
